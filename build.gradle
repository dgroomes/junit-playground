plugins {
    id "java"
    id "application"
}

ext {
    slf4jVersion = "1.7.26"
    junitJupiterVersion = "5.5.1"
    junitPlatformVersion = "1.5.2"
}

repositories {
    mavenLocal()
    jcenter()
}

configurations {
    junitConsoleLauncher
}

task downloadJunitConsoleLauncher(type: Copy) {
    // instead of copying this file to the working directory can I just get the reference to it in .m2? Normally I
    // would print the classpath from the configuration, can I do that even though this isn't a regular Gradle
    // "configuration"?
    from configurations.junitConsoleLauncher
    into '.'
}

dependencies {
    junitConsoleLauncher "org.junit.platform:junit-platform-console-standalone:$junitPlatformVersion"

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "org.slf4j:slf4j-simple:$slf4jVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
}

application {
    mainClassName = "dgroomes.Main"
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        exceptionFormat "full"
    }

// Print the classpath. Helps to set up the classpath for the standalone JUnit console in "test.sh"
//    doFirst {
//        sourceSets.test.runtimeClasspath.each { println it }
//    }
}