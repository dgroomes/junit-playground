plugins {
    id "java"
    id "application"
}

ext {
    slf4jVersion = "1.7.26"
    junitJupiterVersion = "5.5.1"
    junitPlatformVersion = "1.5.2"
}

repositories {
    mavenLocal()
    jcenter()
}

configurations {
    junitLauncher
}

/**
 * Print the path to the standalone JUnit Console Launcher JAR so it can be used later by "test.sh" to execute the JUnit
 * tests. It's great to leverage Gradle for managing dependencies and setting up environment information for a
 * downstream process like "test.sh"
 */
task printJunitLauncherPath() {
    doLast {
        configurations.junitLauncher.resolve().each {
            new File(buildDir, "junit-launcher.path").text = "$it"
        }
    }
}

dependencies {
    junitLauncher "org.junit.platform:junit-platform-console-standalone:$junitPlatformVersion"

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "org.slf4j:slf4j-simple:$slf4jVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion"
}

application {
    mainClassName = "dgroomes.Main"
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        exceptionFormat "full"
    }
}
